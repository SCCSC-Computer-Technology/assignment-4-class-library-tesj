#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace T_Speich_State_Data_Class_Library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StateData")]
	public partial class StateInfoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    #endregion
		
		public StateInfoDataContext() : 
				base(global::T_Speich_State_Data_Class_Library.Properties.Settings.Default.StateDataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StateInfoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateInfoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _State_ID;
		
		private string _State_Name;
		
		private int _State_Population;
		
		private string _State_Flag_Description;
		
		private string _State_Flower;
		
		private string _State_Bird;
		
		private string _State_Colors;
		
		private string _State_Largest_Cities;
		
		private string _State_Capital;
		
		private int _State_Median_Income;
		
		private double _State_Computer_Jobs_Percent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnState_NameChanging(string value);
    partial void OnState_NameChanged();
    partial void OnPopulationChanging(int value);
    partial void OnPopulationChanged();
    partial void OnFlag_DescriptionChanging(string value);
    partial void OnFlag_DescriptionChanged();
    partial void OnFlowerChanging(string value);
    partial void OnFlowerChanged();
    partial void OnBirdChanging(string value);
    partial void OnBirdChanged();
    partial void OnColorsChanging(string value);
    partial void OnColorsChanged();
    partial void OnLargest_CitiesChanging(string value);
    partial void OnLargest_CitiesChanged();
    partial void OnCapitalChanging(string value);
    partial void OnCapitalChanged();
    partial void OnMedian_IncomeChanging(int value);
    partial void OnMedian_IncomeChanged();
    partial void OnComputer_Jobs_PercentChanging(double value);
    partial void OnComputer_Jobs_PercentChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_ID", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated = true)]
		public int State_ID
		{
			get
			{
				return this._State_ID;
			}
			set
			{
				if ((this._State_ID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._State_ID = value;
					this.SendPropertyChanged("State_ID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Name", Storage="_State_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Name
		{
			get
			{
				return this._State_Name;
			}
			set
			{
				if ((this._State_Name != value))
				{
					this.OnState_NameChanging(value);
					this.SendPropertyChanging();
					this._State_Name = value;
					this.SendPropertyChanged("State_Name");
					this.OnState_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Population", DbType="Int NOT NULL")]
		public int State_Population
		{
			get
			{
				return this._State_Population;
			}
			set
			{
				if ((this._State_Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._State_Population = value;
					this.SendPropertyChanged("State_Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Flag_Description", Storage="_State_Flag_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string State_Flag_Description
		{
			get
			{
				return this._State_Flag_Description;
			}
			set
			{
				if ((this._State_Flag_Description != value))
				{
					this.OnFlag_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._State_Flag_Description = value;
					this.SendPropertyChanged("State_Flag_Description");
					this.OnFlag_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Flower", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Flower
		{
			get
			{
				return this._State_Flower;
			}
			set
			{
				if ((this._State_Flower != value))
				{
					this.OnFlowerChanging(value);
					this.SendPropertyChanging();
					this._State_Flower = value;
					this.SendPropertyChanged("State_Flower");
					this.OnFlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Bird", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Bird
		{
			get
			{
				return this._State_Bird;
			}
			set
			{
				if ((this._State_Bird != value))
				{
					this.OnBirdChanging(value);
					this.SendPropertyChanging();
					this._State_Bird = value;
					this.SendPropertyChanged("State_Bird");
					this.OnBirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Colors", DbType="NVarChar(50)")]
		public string State_Colors
		{
			get
			{
				return this._State_Colors;
			}
			set
			{
				if ((this._State_Colors != value))
				{
					this.OnColorsChanging(value);
					this.SendPropertyChanging();
					this._State_Colors = value;
					this.SendPropertyChanged("State_Colors");
					this.OnColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Largest_Cities", Storage="_State_Largest_Cities", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string State_Largest_Cities
		{
			get
			{
				return this._State_Largest_Cities;
			}
			set
			{
				if ((this._State_Largest_Cities != value))
				{
					this.OnLargest_CitiesChanging(value);
					this.SendPropertyChanging();
					this._State_Largest_Cities = value;
					this.SendPropertyChanged("State_Largest_Cities");
					this.OnLargest_CitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Capital", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Capital
		{
			get
			{
				return this._State_Capital;
			}
			set
			{
				if ((this._State_Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._State_Capital = value;
					this.SendPropertyChanged("State_Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Median_Income", Storage="_State_Median_Income", DbType="Int NOT NULL")]
		public int State_Median_Income
		{
			get
			{
				return this._State_Median_Income;
			}
			set
			{
				if ((this._State_Median_Income != value))
				{
					this.OnMedian_IncomeChanging(value);
					this.SendPropertyChanging();
					this._State_Median_Income = value;
					this.SendPropertyChanged("State_Median_Income");
					this.OnMedian_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Computer_Jobs_Percent", Storage="_State_Computer_Jobs_Percent", DbType="Float NOT NULL")]
		public double State_Computer_Jobs_Percent
		{
			get
			{
				return this._State_Computer_Jobs_Percent;
			}
			set
			{
				if ((this._State_Computer_Jobs_Percent != value))
				{
					this.OnComputer_Jobs_PercentChanging(value);
					this.SendPropertyChanging();
					this._State_Computer_Jobs_Percent = value;
					this.SendPropertyChanged("State_Computer_Jobs_Percent");
					this.OnComputer_Jobs_PercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
